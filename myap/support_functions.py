# aux functions that don't have a client call and response
from myap.models import Currency, Teams, PastGames, TodayLines, Bets


def get_currency_list():
    currency_list = list()
    import requests
    from bs4 import BeautifulSoup
    url = "https://thefactfile.org/countries-currencies-symbols/"
    response = requests.get(url)
    if not response.status_code == 200:
        return currency_list
    soup = BeautifulSoup(response.content)
    data_lines = soup.find_all('tr') #lines in the list
    for line in data_lines:
        try:
            detail = line.find_all('td')
            currency = detail[2].get_text().strip()
            iso = detail[3].get_text().strip()
            if (currency, iso) in currency_list:
                continue
            currency_list.append((currency, iso))
        except:
            continue
    return currency_list

def add_currencies(currency_list):
    for currency in currency_list:
        currency_name = currency[0]
        currency_symbol = currency[1]
        try:
            c= Currency.objects.get(iso=currency_symbol)
        except:
            c = Currency(long_name=currency_name, iso=currency_symbol)
            #c.save() #To test out the code, replace this by print(c)
            print(c)

def get_teams():
    import requests
    from bs4 import BeautifulSoup
    url = 'https://www.scoresandodds.com/nba/futures'
    short_out = list()
    long_out = list()
    all_out = list()
    response = requests.get(url)
    soup = BeautifulSoup(response.text)
    data_lines = soup.find_all('span', {'class': 'team-nameplate'})
    for i in data_lines:
        short_out = i.find_all('span', {'class': 'team-emblem'})[0].get_text().strip()
        long_out = i.find_all('a')[0].get_text().strip()
        if [short_out, long_out] not in all_out:
            all_out.append([short_out, long_out])

        # print(i.find_all('span',{'class': 'team-emblem'}))
    return(all_out)

def add_teams(team_list):
    for teams in team_list:
        short_names = teams[0]
        long_names = teams[1]
        try:
            t = Teams.objects.get(short_name=short_names)
        except:
            t = Teams(short_name=short_names, long_name=long_names)
            print(t)
            t.save()

def add_scores(season_scores):
    for games in season_scores:
        teamhome = games[3]
        mlhome = games[4]
        scorehome = games[5]
        teamaway = games[0]
        mlaway = games[1]
        scoreaway = games[2]
        date = games[6]
        try:
            s = PastGames.objects.get(home_team=teamhome,
                                      home_score=scorehome,
                                      home_money_line=mlhome,
                                      away_team=teamaway,
                                      away_score=scoreaway,
                                      away_money_line=mlaway,
                                      game_date=date)
        except:
            s = PastGames(home_team=teamhome,
                                      home_score=scorehome,
                                      home_money_line=mlhome,
                                      away_team=teamaway,
                                      away_score=scoreaway,
                                      away_money_line=mlaway,
                                      game_date=date)
            #print(s)
            s.save()

def add_lines(today_lines):
    for games in today_lines:
        teamhome = games[2]
        mlhome = games[3]
        teamaway = games[0]
        mlaway = games[1]
        try:
            s = TodayLines.objects.get(home_team=teamhome,
                                      home_money_line=mlhome,
                                      away_team=teamaway,
                                      away_money_line=mlaway)
        except:
            s = TodayLines(home_team=teamhome,
                                      home_money_line=mlhome,
                                      away_team=teamaway,
                                      away_money_line=mlaway)
            #print(s)
            s.save()
def get_currency_rates(iso_code):
    url = "http://www.xe.com/currencytables/?from=" + iso_code
    import requests
    from bs4 import BeautifulSoup
    x_rate_list = list()
    try:
        page_source = BeautifulSoup(requests.get(url).content)
    except:
        return x_rate_list
    data = page_source.find('tbody')
    data_lines = data.find_all('tr')
    for line in data_lines:
        symbol = line.find('th').get_text()
        data=line.find_all('td')
        try:
            x_rate = float(data[2].get_text().strip())
            x_rate_list.append((symbol,x_rate))
        except:
            continue
    return x_rate_list
def get_results():
    import requests
    from bs4 import BeautifulSoup
    import re
    import datetime
    from datetime import date, timedelta
    yesterday=date.today()-timedelta(days=1)
    season_start=datetime.date(2023, 1, 21) #keeping this to the actual season start (10/18/22) causes render to crash
    #print(season_start+timedelta(days=1))
    counter = season_start
    list_of_dates=list()
    while counter <= yesterday:
        list_of_dates.append(str(counter))
        counter += timedelta(days=1)
    #list_of_dates
    team_away = list()
    team_home = list()
    ml_away = list()
    ml_home = list()
    away_score = list()
    home_score = list()
    final_game_list = [['PHI', 122, 117, 'BOS', -144, 126, '2022-10-18'],
 ['LAL', 245, 109, 'GS', -300, 123, '2022-10-18'],
 ['WAS', -142, 114, 'IND', 120, 107, '2022-10-19'],
 ['ORL', 138, 109, 'DET', -164, 113, '2022-10-19'],
 ['CHI', 250, 116, 'MIA', -310, 108, '2022-10-19'],
 ['NY', 160, 112, 'MEM', -190, 115, '2022-10-19'],
 ['NO', 126, 130, 'BKN', -148, 108, '2022-10-19'],
 ['HOU', 420, 107, 'ATL', -560, 117, '2022-10-19'],
 ['CLE', 122, 105, 'TOR', -144, 108, '2022-10-19'],
 ['OKC', 500, 108, 'MIN', -700, 115, '2022-10-19'],
 ['CHA', -116, 129, 'SA', -104, 102, '2022-10-19'],
 ['DEN', -275, 102, 'UTA', 225, 123, '2022-10-19'],
 ['DAL', 146, 105, 'PHO', -174, 107, '2022-10-19'],
 ['POR', 140, 115, 'SAC', -166, 108, '2022-10-19'],
 ['MIL', 146, 90, 'PHI', -174, 88, '2022-10-20'],
 ['LAC', -196, 103, 'LAL', 164, 97, '2022-10-20'],
 ['CHI', 108, 100, 'WAS', -126, 102, '2022-10-21'],
 ['NO', -270, 124, 'CHA', 220, 112, '2022-10-21'],
 ['SA', 0, 137, 'IND', -118, 134, '2022-10-21'],
 ['DET', 235, 106, 'NY', -290, 130, '2022-10-21'],
 ['BOS', -124, 111, 'MIA', 106, 104, '2022-10-21'],
 ['ORL', 340, 98, 'ATL', -430, 108, '2022-10-21'],
 ['TOR', 118, 105, 'BKN', -138, 109, '2022-10-21'],
 ['MEM', -275, 129, 'HOU', 225, 122, '2022-10-21'],
 ['UTA', 270, 132, 'MIN', -335, 126, '2022-10-21'],
 ['DEN', 198, 128, 'GS', -240, 123, '2022-10-21'],
 ['PHO', -215, 111, 'POR', 180, 113, '2022-10-21'],
 ['SA', 660, 114, 'PHI', -1000, 105, '2022-10-22'],
 ['DET', -108, 115, 'IND', -108, 124, '2022-10-22'],
 ['BOS', -375, 126, 'ORL', 300, 120, '2022-10-22'],
 ['CLE', -110, 128, 'CHI', -106, 96, '2022-10-22'],
 ['HOU', 610, 105, 'MIL', -900, 125, '2022-10-22'],
 ['TOR', 130, 109, 'MIA', -154, 112, '2022-10-22'],
 ['MEM', 184, 96, 'DAL', -220, 137, '2022-10-22'],
 ['OKC', 310, 117, 'DEN', -390, 122, '2022-10-22'],
 ['LAC', -142, 111, 'SAC', 120, 109, '2022-10-22'],
 ['POR', 148, 106, 'LAL', -176, 104, '2022-10-23'],
 ['CHA', 370, 126, 'ATL', -480, 109, '2022-10-23'],
 ['UTA', 270, 122, 'NO', -335, 121, '2022-10-23'],
 ['WAS', 138, 107, 'CLE', -164, 117, '2022-10-23'],
 ['MIN', -420, 116, 'OKC', 330, 106, '2022-10-23'],
 ['SAC', 370, 125, 'GS', -480, 130, '2022-10-23'],
 ['PHO', -116, 112, 'LAC', -102, 95, '2022-10-23'],
 ['IND', 640, 106, 'PHI', -950, 120, '2022-10-24'],
 ['TOR', 142, 98, 'MIA', -168, 90, '2022-10-24'],
 ['ORL', 245, 102, 'NY', -300, 115, '2022-10-24'],
 ['BKN', -104, 124, 'MEM', -112, 134, '2022-10-24'],
 ['UTA', -142, 108, 'HOU', 120, 114, '2022-10-24'],
 ['SA', 310, 115, 'MIN', -390, 106, '2022-10-24'],
 ['BOS', -200, 102, 'CHI', 168, 120, '2022-10-24'],
 ['DEN', -215, 110, 'POR', 180, 135, '2022-10-24'],
 ['DET', 184, 99, 'WAS', -210, 120, '2022-10-25'],
 ['DAL', -225, 111, 'NO', 190, 113, '2022-10-25'],
 ['LAC', -225, 94, 'OKC', 188, 108, '2022-10-25'],
 ['GS', 0, 105, 'PHO', -118, 134, '2022-10-25'],
 ['ORL', 310, 92, 'CLE', -390, 103, '2022-10-26'],
 ['ATL', -320, 118, 'DET', 250, 113, '2022-10-26'],
 ['BKN', 128, 99, 'MIL', -152, 110, '2022-10-26'],
 ['CHA', 245, 131, 'NY', -300, 134, '2022-10-26'],
 ['PHI', -124, 109, 'TOR', 0, 119, '2022-10-26'],
 ['IND', 225, 109, 'CHI', -275, 124, '2022-10-26'],
 ['SA', 370, 122, 'MIN', -480, 134, '2022-10-26'],
 ['HOU', 280, 101, 'UTA', -350, 109, '2022-10-26'],
 ['LAL', 160, 99, 'DEN', -190, 110, '2022-10-26'],
 ['MIA', -148, 119, 'POR', 126, 98, '2022-10-26'],
 ['DAL', -146, 129, 'BKN', 124, 125, '2022-10-27'],
 ['LAC', -255, 110, 'OKC', 210, 118, '2022-10-27'],
 ['MIA', 190, 110, 'GS', -230, 123, '2022-10-27'],
 ['MEM', -144, 125, 'SAC', 122, 110, '2022-10-27'],
 ['CHA', -118, 93, 'ORL', 0, 113, '2022-10-28'],
 ['ATL', -240, 136, 'DET', 198, 112, '2022-10-28'],
 ['IND', 166, 127, 'WAS', -198, 117, '2022-10-28'],
 ['CLE', 220, 132, 'BOS', -270, 123, '2022-10-28'],
 ['PHI', 152, 112, 'TOR', -180, 90, '2022-10-28'],
 ['LAL', 270, 102, 'MIN', -335, 111, '2022-10-28'],
 ['NY', 198, 108, 'MIL', -240, 119, '2022-10-28'],
 ['CHI', -166, 124, 'SA', 140, 129, '2022-10-28'],
 ['UTA', 260, 101, 'DEN', -320, 117, '2022-10-28'],
 ['NO', 290, 111, 'PHO', -360, 124, '2022-10-28'],
 ['HOU', 156, 111, 'POR', -186, 125, '2022-10-28'],
 ['MIA', -172, 113, 'SAC', 144, 119, '2022-10-29'],
 ['GS', -480, 113, 'CHA', 370, 120, '2022-10-29'],
 ['IND', 460, 125, 'BKN', -620, 116, '2022-10-29'],
 ['ATL', 176, 115, 'MIL', -210, 123, '2022-10-29'],
 ['PHI', -136, 114, 'CHI', 118, 109, '2022-10-29'],
 ['OKC', 385, 117, 'DAL', -500, 111, '2022-10-29'],
 ['MEM', -156, 123, 'UTA', 132, 124, '2022-10-29'],
 ['NO', 102, 112, 'LAC', -120, 91, '2022-10-30'],
 ['WAS', 340, 94, 'BOS', -430, 112, '2022-10-30'],
 ['NY', 128, 108, 'CLE', -152, 121, '2022-10-30'],
 ['GS', -300, 114, 'DET', 245, 128, '2022-10-30'],
 ['MIN', -255, 98, 'SA', 210, 107, '2022-10-30'],
 ['ORL', 315, 105, 'DAL', -400, 114, '2022-10-30'],
 ['HOU', 570, 109, 'PHO', -820, 124, '2022-10-30'],
 ['DEN', -142, 110, 'LAL', 118, 121, '2022-10-30'],
 ['PHI', -152, 118, 'WAS', 128, 111, '2022-10-31'],
 ['SAC', -164, 115, 'CHA', 138, 108, '2022-10-31'],
 ['IND', 265, 109, 'BKN', -330, 116, '2022-10-31'],
 ['ATL', 104, 109, 'TOR', -122, 139, '2022-10-31'],
 ['DET', 570, 108, 'MIL', -820, 110, '2022-10-31'],
 ['MEM', -148, 105, 'UTA', 126, 121, '2022-10-31'],
 ['HOU', 285, 93, 'LAC', -355, 95, '2022-10-31'],
 ['GS', -108, 109, 'MIA', -108, 116, '2022-11-01'],
 ['CHI', 114, 108, 'BKN', -134, 99, '2022-11-01'],
 ['ORL', 136, 108, 'OKC', -162, 116, '2022-11-01'],
 ['MIN', 146, 107, 'PHO', -174, 116, '2022-11-01'],
 ['WAS', 180, 121, 'PHI', -215, 111, '2022-11-02'],
 ['SAC', 154, 107, 'MIA', -184, 110, '2022-11-02'],
 ['ATL', 114, 112, 'NY', -134, 99, '2022-11-02'],
 ['BOS', -120, 113, 'CLE', 102, 114, '2022-11-02'],
 ['TOR', -240, 143, 'SA', 198, 100, '2022-11-02'],
 ['CHA', 210, 88, 'CHI', -255, 106, '2022-11-02'],
 ['DET', 420, 91, 'MIL', -560, 116, '2022-11-02'],
 ['LAC', -230, 109, 'HOU', 190, 101, '2022-11-02'],
 ['UTA', 205, 100, 'DAL', -250, 103, '2022-11-02'],
 ['MEM', -230, 111, 'POR', 190, 106, '2022-11-02'],
 ['NO', -142, 117, 'LAL', 114, 120, '2022-11-02'],
 ['GS', -430, 129, 'ORL', 340, 130, '2022-11-03'],
 ['DEN', -270, 122, 'OKC', 220, 110, '2022-11-03'],
 ['MIA', -162, 99, 'IND', 136, 101, '2022-11-04'],
 ['NY', 102, 106, 'PHI', -120, 104, '2022-11-04'],
 ['BKN', 130, 128, 'WAS', -154, 86, '2022-11-04'],
 ['CLE', -168, 112, 'DET', 142, 88, '2022-11-04'],
 ['CHI', 245, 119, 'BOS', -300, 123, '2022-11-04'],
 ['CHA', 440, 99, 'MEM', -590, 130, '2022-11-04'],
 ['LAC', -164, 113, 'SA', 138, 106, '2022-11-04'],
 ['TOR', 150, 110, 'DAL', -178, 111, '2022-11-04'],
 ['GS', 390, 105, 'NO', -510, 114, '2022-11-04'],
 ['POR', 520, 108, 'PHO', -720, 106, '2022-11-04'],
 ['MIL', -136, 115, 'MIN', 116, 102, '2022-11-04'],
 ['UTA', 138, 130, 'LAL', -164, 116, '2022-11-04'],
 ['SAC', -194, 126, 'ORL', 162, 123, '2022-11-05'],
 ['BKN', -178, 98, 'CHA', 150, 94, '2022-11-05'],
 ['NO', 106, 121, 'ATL', -124, 124, '2022-11-05'],
 ['BOS', -168, 133, 'NY', 142, 118, '2022-11-05'],
 ['OKC', 194, 94, 'MIL', -235, 108, '2022-11-05'],
 ['HOU', 245, 117, 'MIN', -300, 129, '2022-11-05'],
 ['SA', 440, 101, 'DEN', -590, 126, '2022-11-05'],
 ['POR', 460, 82, 'PHO', -650, 102, '2022-11-05'],
 ['CLE', -205, 114, 'LAL', 172, 100, '2022-11-06'],
 ['WAS', 340, 97, 'MEM', -430, 103, '2022-11-06'],
 ['CHI', 148, 104, 'TOR', -176, 113, '2022-11-06'],
 ['UTA', 138, 110, 'LAC', -164, 102, '2022-11-06'],
 ['WAS', 108, 108, 'CHA', -126, 100, '2022-11-07'],
 ['HOU', 158, 134, 'ORL', -190, 127, '2022-11-07'],
 ['OKC', -134, 103, 'DET', 114, 112, '2022-11-07'],
 ['NO', -200, 122, 'IND', 168, 129, '2022-11-07'],
 ['PHO', -118, 88, 'PHI', 0, 100, '2022-11-07'],
 ['MIL', -230, 98, 'ATL', 190, 117, '2022-11-07'],
 ['POR', 168, 110, 'MIA', -200, 107, '2022-11-07'],
 ['TOR', 110, 97, 'CHI', -130, 111, '2022-11-07'],
 ['BOS', -178, 109, 'MEM', 150, 106, '2022-11-07'],
 ['NY', 126, 120, 'MIN', -148, 107, '2022-11-07'],
 ['DEN', -330, 115, 'SA', 265, 109, '2022-11-07'],
 ['BKN', 190, 94, 'DAL', -230, 96, '2022-11-07'],
 ['SAC', 250, 113, 'GS', -320, 116, '2022-11-07'],
 ['LAL', 220, 116, 'UTA', -260, 139, '2022-11-07'],
 ['CLE', -184, 117, 'LAC', 154, 119, '2022-11-07'],
 ['DAL', -355, 87, 'ORL', 285, 94, '2022-11-09'],
 ['DEN', -198, 122, 'IND', 166, 119, '2022-11-09'],
 ['POR', -120, 105, 'CHA', 102, 95, '2022-11-09'],
 ['UTA', 144, 125, 'ATL', -172, 119, '2022-11-09'],
 ['DET', 590, 112, 'BOS', -850, 128, '2022-11-09'],
 ['NY', 132, 85, 'BKN', -156, 112, '2022-11-09'],
 ['HOU', 385, 109, 'TOR', -500, 116, '2022-11-09'],
 ['NO', -132, 115, 'CHI', 112, 111, '2022-11-09'],
 ['PHO', 106, 129, 'MIN', -124, 117, '2022-11-09'],
 ['MIL', -118, 136, 'OKC', 0, 132, '2022-11-09'],
 ['MEM', -210, 124, 'SA', 176, 122, '2022-11-09'],
 ['LAL', 138, 101, 'LAC', -164, 114, '2022-11-09'],
 ['CLE', -200, 120, 'SAC', 168, 127, '2022-11-09'],
 ['DAL', -240, 105, 'WAS', 198, 113, '2022-11-10'],
 ['CHA', 420, 112, 'MIA', -560, 117, '2022-11-10'],
 ['PHI', 102, 95, 'ATL', -120, 104, '2022-11-10'],
 ['POR', 330, 106, 'NO', -420, 95, '2022-11-10'],
 ['PHO', -295, 97, 'ORL', 240, 114, '2022-11-11'],
 ['DEN', 146, 112, 'BOS', -174, 131, '2022-11-11'],
 ['DET', 330, 112, 'NY', -420, 121, '2022-11-11'],
 ['TOR', -210, 113, 'OKC', 176, 132, '2022-11-11'],
 ['MIL', 116, 93, 'SA', -136, 111, '2022-11-11'],
 ['MIN', 152, 103, 'MEM', -180, 114, '2022-11-11'],
 ['CLE', 134, 101, 'GS', -158, 106, '2022-11-11'],
 ['SAC', -190, 120, 'LAL', 160, 114, '2022-11-11'],
 ['BKN', 102, 110, 'LAC', -118, 95, '2022-11-12'],
 ['UTA', -174, 112, 'WAS', 146, 121, '2022-11-12'],
 ['BOS', -360, 117, 'DET', 290, 108, '2022-11-12'],
 ['TOR', 114, 104, 'IND', -134, 118, '2022-11-12'],
 ['ATL', 118, 109, 'PHI', -138, 121, '2022-11-12'],
 ['CHA', 275, 115, 'MIA', -340, 132, '2022-11-12'],
 ['HOU', 390, 106, 'NO', -510, 119, '2022-11-12'],
 ['POR', 205, 112, 'DAL', -255, 117, '2022-11-12'],
 ['OKC', 184, 145, 'NY', -220, 135, '2022-11-13'],
 ['MIN', 0, 129, 'CLE', -118, 124, '2022-11-13'],
 ['MEM', 102, 92, 'WAS', -120, 102, '2022-11-13'],
 ['UTA', 138, 98, 'PHI', -164, 105, '2022-11-13'],
 ['DEN', -122, 126, 'CHI', 104, 103, '2022-11-13'],
 ['GS', -176, 115, 'SAC', 148, 122, '2022-11-13'],
 ['BKN', -198, 103, 'LAL', 172, 116, '2022-11-13'],
 ['TOR', -184, 115, 'DET', 154, 111, '2022-11-14'],
 ['CHA', -126, 112, 'ORL', 108, 105, '2022-11-14'],
 ['OKC', 460, 122, 'BOS', -620, 126, '2022-11-14'],
 ['PHO', 118, 112, 'MIA', -138, 113, '2022-11-14'],
 ['LAC', -200, 122, 'HOU', 168, 106, '2022-11-14'],
 ['ATL', 138, 121, 'MIL', -164, 106, '2022-11-14'],
 ['SA', 320, 95, 'GS', -405, 132, '2022-11-14'],
 ['MEM', 102, 102, 'NO', -120, 113, '2022-11-15'],
 ['LAC', 215, 101, 'DAL', -260, 103, '2022-11-15'],
 ['NY', 152, 118, 'UTA', -180, 111, '2022-11-15'],
 ['SA', 260, 110, 'POR', -320, 117, '2022-11-15'],
 ['BKN', 0, 121, 'SAC', -118, 153, '2022-11-15'],
 ['IND', -116, 125, 'CHA', -102, 113, '2022-11-16'],
 ['MIN', -330, 126, 'ORL', 265, 108, '2022-11-16'],
 ['OKC', 168, 121, 'WAS', -200, 120, '2022-11-16'],
 ['BOS', -116, 126, 'ATL', -102, 101, '2022-11-16'],
 ['MIA', 128, 104, 'TOR', -152, 112, '2022-11-16'],
 ['CHI', 114, 110, 'NO', -134, 124, '2022-11-16'],
 ['CLE', 116, 98, 'MIL', -136, 113, '2022-11-16'],
 ['HOU', 215, 101, 'DAL', -260, 92, '2022-11-16'],
 ['NY', 108, 106, 'DEN', -126, 103, '2022-11-16'],
 ['GS', -142, 119, 'PHO', 120, 130, '2022-11-16'],
 ['BKN', 130, 109, 'POR', -154, 107, '2022-11-17'],
 ['SA', 225, 112, 'SAC', -275, 130, '2022-11-17'],
 ['DET', 410, 91, 'LAC', -550, 96, '2022-11-17'],
 ['MIA', 265, 106, 'WAS', -330, 107, '2022-11-18'],
 ['CHA', 380, 122, 'CLE', -490, 132, '2022-11-18'],
 ['MIL', -112, 102, 'PHI', -104, 110, '2022-11-18'],
 ['ORL', 275, 108, 'CHI', -350, 107, '2022-11-18'],
 ['IND', -215, 99, 'HOU', 180, 91, '2022-11-18'],
 ['OKC', 200, 110, 'MEM', -245, 121, '2022-11-18'],
 ['BOS', -158, 117, 'NO', 134, 109, '2022-11-18'],
 ['DEN', 350, 99, 'DAL', -450, 127, '2022-11-18'],
 ['PHO', -108, 133, 'UTA', -104, 134, '2022-11-18'],
 ['NY', 240, 101, 'GS', -295, 111, '2022-11-18'],
 ['DET', 210, 121, 'LAL', -255, 128, '2022-11-18'],
 ['TOR', 176, 122, 'ATL', -210, 124, '2022-11-19'],
 ['ORL', 240, 113, 'IND', -295, 114, '2022-11-19'],
 ['MIN', -162, 112, 'PHI', 136, 109, '2022-11-19'],
 ['UTA', 142, 118, 'POR', -168, 113, '2022-11-19'],
 ['SA', 295, 97, 'LAC', -370, 119, '2022-11-19'],
 ['NY', 190, 95, 'PHO', -230, 116, '2022-11-20'],
 ['CHA', 164, 102, 'WAS', -196, 106, '2022-11-20'],
 ['DET', 400, 129, 'SAC', -520, 137, '2022-11-20'],
 ['MIA', 235, 87, 'CLE', -290, 113, '2022-11-20'],
 ['GS', -500, 127, 'HOU', 385, 120, '2022-11-20'],
 ['MEM', 235, 115, 'BKN', -290, 127, '2022-11-20'],
 ['DEN', 400, 98, 'DAL', -520, 97, '2022-11-20'],
 ['SA', 198, 92, 'LAL', -240, 123, '2022-11-20'],
 ['ORL', 230, 102, 'IND', -280, 123, '2022-11-21'],
 ['ATL', 138, 102, 'CLE', -164, 114, '2022-11-21'],
 ['POR', 370, 111, 'MIL', -480, 119, '2022-11-21'],
 ['NY', 102, 129, 'OKC', -120, 119, '2022-11-21'],
 ['GS', 410, 83, 'NO', -550, 128, '2022-11-21'],
 ['MIA', 290, 101, 'MIN', -360, 105, '2022-11-21'],
 ['BOS', -210, 107, 'CHI', 176, 121, '2022-11-21'],
 ['UTA', 114, 114, 'LAC', -134, 121, '2022-11-21'],
 ['BKN', -330, 106, 'PHI', 265, 115, '2022-11-22'],
 ['SAC', 132, 113, 'MEM', -156, 109, '2022-11-22'],
 ['DET', 460, 110, 'DEN', -620, 108, '2022-11-22'],
 ['LAL', 315, 105, 'PHO', -400, 115, '2022-11-22'],
 ['MIN', -126, 115, 'IND', 108, 101, '2022-11-23'],
 ['PHI', 150, 101, 'CHA', -178, 107, '2022-11-23'],
 ['POR', 215, 96, 'CLE', -260, 114, '2022-11-23'],
 ['BKN', -138, 112, 'TOR', 118, 98, '2022-11-23'],
 ['DAL', 180, 112, 'BOS', -215, 125, '2022-11-23'],
 ['SAC', 156, 106, 'ATL', -186, 115, '2022-11-23'],
 ['WAS', 162, 105, 'MIA', -194, 113, '2022-11-23'],
 ['CHI', 235, 118, 'MIL', -290, 113, '2022-11-23'],
 ['NO', -210, 129, 'SA', 176, 110, '2022-11-23'],
 ['DEN', -116, 131, 'OKC', -102, 126, '2022-11-23'],
 ['DET', 450, 125, 'UTA', -600, 116, '2022-11-23'],
 ['LAC', 385, 107, 'GS', -500, 124, '2022-11-23'],
 ['MIN', -240, 108, 'CHA', 198, 110, '2022-11-25'],
 ['PHI', 102, 107, 'ORL', -120, 99, '2022-11-25'],
 ['POR', 150, 132, 'NY', -178, 129, '2022-11-25'],
 ['ATL', -275, 122, 'HOU', 225, 128, '2022-11-25'],
 ['CLE', 146, 102, 'MIL', -174, 117, '2022-11-25'],
 ['NO', 122, 111, 'MEM', -144, 132, '2022-11-25'],
 ['BKN', -164, 117, 'IND', 138, 128, '2022-11-25'],
 ['SAC', 245, 104, 'BOS', -300, 122, '2022-11-25'],
 ['CHI', -146, 119, 'OKC', 124, 123, '2022-11-25'],
 ['WAS', 128, 107, 'MIA', -152, 110, '2022-11-25'],
 ['LAL', -164, 105, 'SA', 138, 94, '2022-11-25'],
 ['DET', 560, 102, 'PHO', -800, 108, '2022-11-25'],
 ['UTA', 265, 118, 'GS', -330, 129, '2022-11-25'],
 ['DEN', -180, 114, 'LAC', 152, 104, '2022-11-25'],
 ['DAL', -146, 100, 'TOR', 124, 105, '2022-11-26'],
 ['LAL', -102, 143, 'SA', -116, 138, '2022-11-26'],
 ['OKC', -134, 105, 'HOU', 114, 118, '2022-11-26'],
 ['UTA', 205, 112, 'PHO', -250, 113, '2022-11-26'],
 ['POR', 260, 97, 'BKN', -320, 111, '2022-11-27'],
 ['GS', -118, 137, 'MIN', 0, 114, '2022-11-27'],
 ['IND', -134, 100, 'LAC', 114, 114, '2022-11-27'],
 ['MIA', 142, 106, 'ATL', -168, 98, '2022-11-27'],
 ['PHI', -112, 133, 'ORL', -104, 103, '2022-11-27'],
 ['CLE', -310, 102, 'DET', 250, 94, '2022-11-27'],
 ['MEM', -122, 127, 'NY', 104, 123, '2022-11-27'],
 ['WAS', 270, 121, 'BOS', -335, 130, '2022-11-27'],
 ['DAL', 194, 115, 'MIL', -235, 124, '2022-11-27'],
 ['ATL', 122, 101, 'PHI', -144, 104, '2022-11-28'],
 ['MIN', -104, 127, 'WAS', -112, 142, '2022-11-28'],
 ['CHA', 490, 105, 'BOS', -670, 140, '2022-11-28'],
 ['ORL', 460, 102, 'BKN', -620, 109, '2022-11-28'],
 ['CLE', 172, 88, 'TOR', -205, 100, '2022-11-28'],
 ['OKC', 172, 101, 'NO', -205, 105, '2022-11-28'],
 ['HOU', 450, 113, 'DEN', -600, 129, '2022-11-28'],
 ['CHI', 108, 114, 'UTA', -126, 107, '2022-11-28'],
 ['PHO', -108, 122, 'SAC', -108, 117, '2022-11-28'],
 ['IND', 142, 116, 'LAL', -168, 115, '2022-11-28'],
 ['NY', -205, 140, 'DET', 164, 110, '2022-11-29'],
 ['GS', -106, 113, 'DAL', -116, 116, '2022-11-29'],
 ['LAC', 150, 118, 'POR', -178, 112, '2022-11-29'],
 ['ATL', -255, 125, 'ORL', 210, 108, '2022-11-30'],
 ['PHI', 140, 85, 'CLE', -166, 113, '2022-11-30'],
 ['MIL', -230, 109, 'NY', 190, 103, '2022-11-30'],
 ['MIA', 330, 121, 'BOS', -420, 134, '2022-11-30'],
 ['WAS', 188, 107, 'BKN', -225, 113, '2022-11-30'],
 ['TOR', -136, 108, 'NO', 116, 126, '2022-11-30'],
 ['SA', 122, 111, 'OKC', -144, 119, '2022-11-30'],
 ['MEM', -148, 101, 'MIN', 126, 109, '2022-11-30'],
 ['LAC', 235, 112, 'UTA', -290, 125, '2022-11-30'],
 ['HOU', 460, 100, 'DEN', -620, 120, '2022-11-30'],
 ['CHI', 184, 113, 'PHO', -220, 132, '2022-11-30'],
 ['IND', 158, 114, 'SAC', -188, 137, '2022-11-30'],
 ['POR', 200, 109, 'LAL', -245, 128, '2022-11-30'],
 ['DAL', -335, 125, 'DET', 270, 131, '2022-12-01'],
 ['WAS', -176, 116, 'CHA', 148, 117, '2022-12-02'],
 ['ORL', 400, 96, 'CLE', -520, 107, '2022-12-02'],
 ['DEN', -196, 109, 'ATL', 164, 117, '2022-12-02'],
 ['MIA', 220, 120, 'BOS', -270, 116, '2022-12-02'],
 ['LAL', 300, 133, 'MIL', -375, 129, '2022-12-02'],
 ['TOR', 108, 105, 'BKN', -126, 114, '2022-12-02'],
 ['PHI', 160, 109, 'MEM', -190, 117, '2022-12-02'],
 ['NO', -280, 117, 'SA', 230, 99, '2022-12-02'],
 ['IND', 148, 119, 'UTA', -176, 139, '2022-12-02'],
 ['HOU', 450, 122, 'PHO', -600, 121, '2022-12-02'],
 ['CHI', 240, 111, 'GS', -295, 119, '2022-12-02'],
 ['DAL', -120, 121, 'NY', 102, 100, '2022-12-03'],
 ['SAC', -174, 123, 'LAC', 146, 96, '2022-12-03'],
 ['MIL', -124, 105, 'CHA', 106, 96, '2022-12-03'],
 ['ORL', 460, 108, 'TOR', -620, 121, '2022-12-03'],
 ['OKC', 172, 135, 'MIN', -205, 128, '2022-12-03'],
 ['HOU', 450, 101, 'GS', -600, 120, '2022-12-03'],
 ['POR', 176, 116, 'UTA', -210, 111, '2022-12-03'],
 ['DEN', 106, 106, 'NO', -124, 121, '2022-12-04'],
 ['PHO', -500, 133, 'SA', 385, 95, '2022-12-04'],
 ['LAL', 0, 130, 'WAS', -118, 119, '2022-12-04'],
 ['CLE', -138, 81, 'NY', 118, 92, '2022-12-04'],
 ['MEM', -255, 122, 'DET', 210, 112, '2022-12-04'],
 ['CHI', 126, 101, 'SAC', -148, 110, '2022-12-04'],
 ['BOS', -134, 103, 'BKN', 114, 92, '2022-12-04'],
 ['IND', 176, 100, 'POR', -210, 116, '2022-12-04'],
 ['MIL', -520, 109, 'ORL', 400, 102, '2022-12-05'],
 ['LAC', -250, 119, 'CHA', 205, 117, '2022-12-05'],
 ['OKC', 210, 121, 'ATL', -255, 114, '2022-12-05'],
 ['BOS', 102, 116, 'TOR', -120, 110, '2022-12-05'],
 ['PHI', -320, 123, 'HOU', 260, 132, '2022-12-05'],
 ['MIA', -210, 93, 'MEM', 176, 101, '2022-12-05'],
 ['PHO', 136, 111, 'DAL', -162, 130, '2022-12-05'],
 ['IND', 540, 112, 'GS', -770, 104, '2022-12-05'],
 ['LAL', 176, 102, 'CLE', -210, 116, '2022-12-06'],
 ['DET', 250, 116, 'MIA', -310, 96, '2022-12-06'],
 ['DAL', 152, 116, 'DEN', -180, 115, '2022-12-06'],
 ['LAC', -300, 111, 'ORL', 245, 116, '2022-12-07'],
 ['CHA', 370, 116, 'BKN', -480, 122, '2022-12-07'],
 ['ATL', 114, 89, 'NY', -134, 113, '2022-12-07'],
 ['LAL', 540, 113, 'TOR', -770, 126, '2022-12-07'],
 ['SAC', 205, 113, 'MIL', -250, 126, '2022-12-07'],
 ['DET', 400, 98, 'NO', -520, 104, '2022-12-07'],
 ['OKC', 280, 102, 'MEM', -350, 123, '2022-12-07'],
 ['IND', 154, 115, 'MIN', -184, 121, '2022-12-07'],
 ['WAS', 166, 111, 'CHI', -198, 115, '2022-12-07'],
 ['GS', 180, 123, 'UTA', -215, 124, '2022-12-07'],
 ['BOS', 108, 125, 'PHO', -132, 98, '2022-12-07'],
 ['LAC', 200, 110, 'MIA', -245, 115, '2022-12-08'],
 ['HOU', -134, 109, 'SA', 116, 118, '2022-12-08'],
 ['DEN', -120, 121, 'POR', 102, 120, '2022-12-08'],
 ['TOR', -335, 109, 'ORL', 270, 113, '2022-12-09'],
 ['NY', -176, 121, 'CHA', 148, 102, '2022-12-09'],
 ['WAS', 146, 111, 'IND', -174, 121, '2022-12-09'],
 ['LAL', 164, 122, 'PHI', -196, 133, '2022-12-09'],
 ['SAC', 142, 106, 'CLE', -168, 95, '2022-12-09'],
 ['ATL', 250, 116, 'BKN', -310, 120, '2022-12-09'],
 ['DET', 430, 103, 'MEM', -590, 114, '2022-12-09'],
 ['PHO', -116, 117, 'NO', -102, 128, '2022-12-09'],
 ['MIN', -110, 118, 'UTA', -106, 108, '2022-12-09'],
 ['MIL', -112, 106, 'DAL', -104, 105, '2022-12-09'],
 ['SA', 530, 115, 'MIA', -670, 111, '2022-12-10'],
 ['BKN', 290, 136, 'IND', -360, 133, '2022-12-10'],
 ['LAC', -200, 114, 'WAS', 168, 107, '2022-12-10'],
 ['OKC', 166, 102, 'CLE', -198, 110, '2022-12-10'],
 ['DAL', 158, 115, 'CHI', -188, 144, '2022-12-10'],
 ['BOS', -136, 107, 'GS', 116, 123, '2022-12-10'],
 ['UTA', 440, 110, 'DEN', -590, 115, '2022-12-10'],
 ['MIN', 172, 118, 'POR', -205, 124, '2022-12-10'],
 ['PHO', 146, 124, 'NO', -174, 129, '2022-12-11'],
 ['CHA', 390, 113, 'PHI', -510, 131, '2022-12-11'],
 ['SAC', 116, 99, 'NY', -136, 112, '2022-12-11'],
 ['LAL', -210, 124, 'DET', 176, 117, '2022-12-11'],
 ['TOR', -260, 99, 'ORL', 215, 111, '2022-12-11'],
 ['CHI', 136, 122, 'ATL', -162, 123, '2022-12-11'],
 ['MIL', -460, 92, 'HOU', 360, 97, '2022-12-11'],
 ['BKN', -210, 112, 'WAS', 176, 100, '2022-12-12'],
 ['MIA', -164, 87, 'IND', 138, 82, '2022-12-12'],
 ['ATL', 315, 103, 'MEM', -400, 128, '2022-12-12'],
 ['CLE', -405, 111, 'SA', 320, 112, '2022-12-12'],
 ['OKC', 310, 114, 'DAL', -390, 121, '2022-12-12'],
 ['MIN', 148, 112, 'POR', -176, 133, '2022-12-12'],
 ['BOS', -180, 93, 'LAC', 152, 113, '2022-12-12'],
 ['SAC', 148, 103, 'PHI', -176, 123, '2022-12-13'],
 ['GS', 118, 111, 'MIL', -138, 128, '2022-12-13'],
 ['PHO', -270, 97, 'HOU', 220, 111, '2022-12-13'],
 ['NO', -126, 100, 'UTA', 108, 121, '2022-12-13'],
 ['BOS', -178, 122, 'LAL', 150, 118, '2022-12-13'],
 ['DET', 154, 141, 'CHA', -184, 134, '2022-12-14'],
 ['GS', -122, 119, 'IND', 104, 125, '2022-12-14'],
 ['ATL', -144, 124, 'ORL', 122, 135, '2022-12-14'],
 ['NY', 134, 128, 'CHI', -158, 120, '2022-12-14'],
 ['SAC', 156, 124, 'TOR', -186, 123, '2022-12-14'],
 ['MIA', -144, 110, 'OKC', 122, 108, '2022-12-14'],
 ['POR', -275, 128, 'SA', 225, 112, '2022-12-14'],
 ['CLE', 118, 105, 'DAL', -138, 90, '2022-12-14'],
 ['WAS', 440, 128, 'DEN', -590, 141, '2022-12-14'],
 ['MIN', 260, 88, 'LAC', -320, 99, '2022-12-14'],
 ['MIA', -146, 111, 'HOU', 124, 108, '2022-12-15'],
 ['MIL', 128, 101, 'MEM', -152, 142, '2022-12-15'],
 ['NO', -112, 129, 'UTA', -104, 132, '2022-12-15'],
 ['PHO', -250, 111, 'LAC', 205, 95, '2022-12-15'],
 ['SAC', -250, 122, 'DET', 205, 113, '2022-12-16'],
 ['ATL', 120, 125, 'CHA', -142, 106, '2022-12-16'],
 ['BKN', -120, 119, 'TOR', 0, 116, '2022-12-16'],
 ['IND', 270, 112, 'CLE', -335, 118, '2022-12-16'],
 ['ORL', 660, 117, 'BOS', -1000, 109, '2022-12-16'],
 ['GS', 315, 106, 'PHI', -400, 118, '2022-12-16'],
 ['NY', 128, 114, 'CHI', -152, 91, '2022-12-16'],
 ['MIN', 166, 112, 'OKC', -198, 110, '2022-12-16'],
 ['POR', 152, 110, 'DAL', -180, 130, '2022-12-16'],
 ['DEN', -126, 108, 'LAL', 108, 126, '2022-12-16'],
 ['WAS', 162, 93, 'LAC', -194, 102, '2022-12-17'],
 ['MIA', -320, 111, 'SA', 260, 101, '2022-12-17'],
 ['MEM', -590, 109, 'OKC', 440, 115, '2022-12-17'],
 ['DAL', 300, 99, 'CLE', -375, 100, '2022-12-17'],
 ['UTA', 112, 97, 'MIL', -132, 123, '2022-12-17'],
 ['POR', -158, 107, 'HOU', 134, 95, '2022-12-17'],
 ['NO', 128, 114, 'PHO', -152, 118, '2022-12-17'],
 ['ORL', 410, 95, 'BOS', -550, 92, '2022-12-18'],
 ['NY', -116, 109, 'IND', -102, 106, '2022-12-18'],
 ['BKN', -355, 124, 'DET', 285, 121, '2022-12-18'],
 ['GS', 194, 126, 'TOR', -235, 110, '2022-12-18'],
 ['CHI', -124, 126, 'MIN', 106, 150, '2022-12-18'],
 ['CHA', 315, 115, 'DEN', -400, 119, '2022-12-18'],
 ['WAS', 124, 117, 'LAL', -146, 119, '2022-12-18'],
 ['UTA', 215, 99, 'CLE', -260, 122, '2022-12-19'],
 ['TOR', 205, 101, 'PHI', -250, 104, '2022-12-19'],
 ['ORL', 290, 125, 'ATL', -360, 126, '2022-12-19'],
 ['MIL', -108, 128, 'NO', -108, 119, '2022-12-19'],
 ['POR', -184, 121, 'OKC', 154, 123, '2022-12-19'],
 ['DAL', -240, 106, 'MIN', 198, 116, '2022-12-19'],
 ['SA', 162, 124, 'HOU', -194, 105, '2022-12-19'],
 ['LAL', 440, 104, 'PHO', -590, 130, '2022-12-19'],
 ['CHA', 360, 125, 'SAC', -460, 119, '2022-12-19'],
 ['UTA', -142, 126, 'DET', 120, 111, '2022-12-20'],
 ['CHI', 102, 113, 'MIA', -120, 103, '2022-12-20'],
 ['GS', 198, 94, 'NY', -240, 132, '2022-12-20'],
 ['WAS', 225, 113, 'PHO', -275, 110, '2022-12-20'],
 ['MEM', -120, 91, 'DEN', 102, 105, '2022-12-20'],
 ['DET', 500, 93, 'PHI', -700, 113, '2022-12-21'],
 ['MIL', 112, 106, 'CLE', -132, 114, '2022-12-21'],
 ['IND', 360, 117, 'BOS', -460, 112, '2022-12-21'],
 ['CHI', 166, 110, 'ATL', -198, 108, '2022-12-21'],
 ['GS', 410, 113, 'BKN', -550, 143, '2022-12-21'],
 ['TOR', 116, 113, 'NY', -136, 106, '2022-12-21'],
 ['ORL', -102, 116, 'HOU', -116, 110, '2022-12-21'],
 ['DAL', -134, 104, 'MIN', 114, 99, '2022-12-21'],
 ['POR', -174, 98, 'OKC', 146, 101, '2022-12-21'],
 ['LAL', 295, 120, 'SAC', -370, 134, '2022-12-21'],
 ['CHA', 290, 105, 'LAC', -360, 126, '2022-12-21'],
 ['SA', 295, 117, 'NO', -370, 126, '2022-12-22'],
 ['WAS', 220, 112, 'UTA', -270, 120, '2022-12-22'],
 ['LAC', 142, 114, 'PHI', -168, 119, '2022-12-23'],
 ['SA', 194, 113, 'ORL', -235, 133, '2022-12-23'],
 ['TOR', 160, 118, 'CLE', -190, 107, '2022-12-23'],
 ['MIN', 340, 109, 'BOS', -430, 121, '2022-12-23'],
 ['DET', 340, 105, 'ATL', -430, 130, '2022-12-23'],
 ['MIL', 110, 100, 'BKN', -130, 118, '2022-12-23'],
 ['CHI', 194, 118, 'NY', -240, 117, '2022-12-23'],
 ['DAL', -255, 112, 'HOU', 210, 106, '2022-12-23'],
 ['IND', 194, 111, 'MIA', -235, 108, '2022-12-23'],
 ['NO', 114, 128, 'OKC', -134, 125, '2022-12-23'],
 ['POR', 190, 107, 'DEN', -230, 120, '2022-12-23'],
 ['MEM', -152, 125, 'PHO', 128, 100, '2022-12-23'],
 ['WAS', 260, 125, 'SAC', -320, 111, '2022-12-23'],
 ['CHA', 126, 134, 'LAL', -148, 130, '2022-12-23'],
 ['PHI', -134, 119, 'NY', 114, 112, '2022-12-25'],
 ['LAL', 245, 115, 'DAL', -300, 124, '2022-12-25'],
 ['MIL', 172, 118, 'BOS', -205, 139, '2022-12-25'],
 ['MEM', -290, 109, 'GS', 235, 123, '2022-12-25'],
 ['PHO', 152, 125, 'DEN', -180, 128, '2022-12-25'],
 ['BKN', 108, 125, 'CLE', -126, 117, '2022-12-26'],
 ['LAC', -215, 142, 'DET', 180, 131, '2022-12-26'],
 ['MIN', -104, 110, 'MIA', -112, 113, '2022-12-26'],
 ['UTA', -190, 122, 'SA', 160, 126, '2022-12-26'],
 ['HOU', 215, 133, 'CHI', -260, 118, '2022-12-26'],
 ['IND', 110, 93, 'NO', -130, 113, '2022-12-26'],
 ['CHA', 184, 113, 'POR', -220, 124, '2022-12-26'],
 ['LAL', 122, 129, 'ORL', -144, 110, '2022-12-27'],
 ['PHI', -198, 111, 'WAS', 166, 116, '2022-12-27'],
 ['HOU', 900, 102, 'BOS', -1600, 126, '2022-12-27'],
 ['ATL', -130, 114, 'IND', 110, 129, '2022-12-27'],
 ['LAC', 132, 124, 'TOR', -156, 113, '2022-12-27'],
 ['SA', 205, 114, 'OKC', -255, 130, '2022-12-27'],
 ['PHO', 245, 125, 'MEM', -300, 108, '2022-12-27'],
 ['NY', 188, 121, 'DAL', -225, 126, '2022-12-27'],
 ['CHA', 180, 105, 'GS', -215, 110, '2022-12-27'],
 ['DEN', -164, 113, 'SAC', 138, 106, '2022-12-27'],
 ['ORL', -116, 101, 'DET', -102, 121, '2022-12-28'],
 ['PHO', -136, 102, 'WAS', 116, 127, '2022-12-28'],
 ['BKN', -290, 108, 'ATL', 235, 107, '2022-12-28'],
 ['LAL', 330, 98, 'MIA', -420, 112, '2022-12-28'],
 ['MIN', 205, 118, 'NO', -250, 119, '2022-12-28'],
 ['MIL', -142, 113, 'CHI', 120, 119, '2022-12-28'],
 ['UTA', -184, 107, 'GS', 154, 112, '2022-12-28'],
 ['DEN', 130, 126, 'SAC', -154, 127, '2022-12-28'],
 ['OKC', 120, 113, 'CHA', -142, 121, '2022-12-29'],
 ['CLE', -178, 126, 'IND', 150, 135, '2022-12-29'],
 ['MEM', -180, 119, 'TOR', 152, 106, '2022-12-29'],
 ['LAC', 230, 110, 'BOS', -280, 116, '2022-12-29'],
 ['NY', -200, 115, 'SA', 168, 122, '2022-12-29'],
 ['HOU', 360, 114, 'DAL', -460, 129, '2022-12-29'],
 ['WAS', -196, 119, 'ORL', 164, 100, '2022-12-30'],
 ['PHO', 108, 104, 'TOR', -126, 113, '2022-12-30'],
 ['LAL', 198, 130, 'ATL', -240, 121, '2022-12-30'],
 ['DET', 235, 118, 'CHI', -290, 132, '2022-12-30'],
 ['MIN', 260, 114, 'MIL', -320, 123, '2022-12-30'],
 ['PHI', -118, 116, 'NO', 0, 127, '2022-12-30'],
 ['MIA', 148, 119, 'DEN', -176, 124, '2022-12-30'],
 ['POR', -104, 112, 'GS', -112, 118, '2022-12-30'],
 ['UTA', 138, 125, 'SAC', -164, 126, '2022-12-30'],
 ['LAC', -146, 130, 'IND', 124, 131, '2022-12-31'],
 ['NY', -162, 108, 'HOU', 136, 88, '2022-12-31'],
 ['CLE', -118, 103, 'CHI', 0, 102, '2022-12-31'],
 ['DAL', -270, 126, 'SA', 220, 125, '2022-12-31'],
 ['BKN', -250, 123, 'CHA', 205, 106, '2022-12-31'],
 ['NO', 200, 101, 'MEM', -245, 116, '2022-12-31'],
 ['DET', 240, 116, 'MIN', -295, 104, '2022-12-31'],
 ['PHI', -138, 115, 'OKC', 118, 96, '2022-12-31'],
 ['MIA', 150, 126, 'UTA', -178, 123, '2022-12-31'],
 ['BOS', -166, 111, 'DEN', 140, 123, '2023-01-01'],
 ['WAS', 118, 118, 'MIL', -138, 95, '2023-01-01'],
 ['SAC', 150, 108, 'MEM', -178, 118, '2023-01-01'],
 ['PHO', 120, 83, 'NY', -142, 102, '2023-01-02'],
 ['NO', 180, 111, 'PHI', -220, 120, '2023-01-02'],
 ['CHI', 146, 134, 'CLE', -174, 145, '2023-01-02'],
 ['TOR', -126, 114, 'IND', 108, 122, '2023-01-02'],
 ['LAL', 108, 121, 'CHA', -126, 115, '2023-01-02'],
 ['SA', 500, 103, 'BKN', -700, 139, '2023-01-02'],
 ['DEN', -190, 111, 'MIN', 160, 124, '2023-01-02'],
 ['DAL', -270, 111, 'HOU', 220, 106, '2023-01-02'],
 ['DET', 310, 106, 'POR', -390, 135, '2023-01-02'],
 ['ATL', 0, 141, 'GS', -118, 143, '2023-01-02'],
 ['MIA', -108, 110, 'LAC', -108, 100, '2023-01-02'],
 ['WAS', 240, 113, 'MIL', -295, 123, '2023-01-03'],
 ['BOS', -620, 117, 'OKC', 460, 150, '2023-01-03'],
 ['SAC', 134, 117, 'UTA', -158, 115, '2023-01-03'],
 ['MEM', -295, 131, 'CHA', 240, 107, '2023-01-04'],
 ['OKC', -118, 115, 'ORL', 0, 126, '2023-01-04'],
 ['PHO', 168, 88, 'CLE', -200, 90, '2023-01-04'],
 ['IND', 176, 126, 'PHI', -210, 129, '2023-01-04'],
 ['SA', 360, 114, 'NY', -460, 117, '2023-01-04'],
 ['MIL', 176, 104, 'TOR', -210, 101, '2023-01-04'],
 ['HOU', 235, 108, 'NO', -290, 119, '2023-01-04'],
 ['BKN', -200, 112, 'CHI', 168, 121, '2023-01-04'],
 ['POR', -130, 106, 'MIN', 110, 113, '2023-01-04'],
 ['DET', 220, 122, 'GS', -270, 119, '2023-01-04'],
 ['MIA', -355, 109, 'LAL', 285, 112, '2023-01-04'],
 ['ATL', 106, 120, 'SAC', -124, 117, '2023-01-04'],
 ['MEM', -270, 123, 'ORL', 220, 115, '2023-01-05'],
 ['BOS', -156, 124, 'DAL', 132, 95, '2023-01-05'],
 ['UTA', -260, 131, 'HOU', 215, 114, '2023-01-05'],
 ['LAC', 164, 91, 'DEN', -196, 122, '2023-01-05'],
 ['POR', 0, 99, 'IND', -118, 108, '2023-01-06'],
 ['CHI', 172, 126, 'PHI', -205, 112, '2023-01-06'],
 ['NY', 150, 112, 'TOR', -178, 108, '2023-01-06'],
 ['BKN', -200, 108, 'NO', 168, 102, '2023-01-06'],
 ['DET', 102, 109, 'SA', -120, 121, '2023-01-06'],
 ['CHA', 360, 138, 'MIL', -460, 109, '2023-01-06'],
 ['WAS', -110, 110, 'OKC', -106, 127, '2023-01-06'],
 ['CLE', 180, 108, 'DEN', -215, 121, '2023-01-06'],
 ['LAC', 188, 115, 'MIN', -225, 128, '2023-01-06'],
 ['MIA', -118, 104, 'PHO', 0, 96, '2023-01-06'],
 ['ATL', -142, 114, 'LAL', 120, 130, '2023-01-06'],
 ['BOS', -1350, 121, 'SA', 810, 116, '2023-01-07'],
 ['NO', 300, 117, 'DAL', -375, 127, '2023-01-07'],
 ['UTA', -142, 118, 'CHI', 120, 126, '2023-01-07'],
 ['ORL', 205, 115, 'GS', -250, 101, '2023-01-07'],
 ['LAL', 245, 136, 'SAC', -300, 134, '2023-01-07'],
 ['PHI', -215, 123, 'DET', 180, 111, '2023-01-08'],
 ['POR', 132, 105, 'TOR', -156, 117, '2023-01-08'],
 ['CHA', 184, 111, 'IND', -220, 116, '2023-01-08'],
 ['BKN', -138, 102, 'MIA', 118, 101, '2023-01-08'],
 ['UTA', 190, 118, 'MEM', -230, 123, '2023-01-08'],
 ['MIN', -176, 104, 'HOU', 148, 96, '2023-01-08'],
 ['DAL', 152, 109, 'OKC', -180, 120, '2023-01-08'],
 ['CLE', -240, 112, 'PHO', 198, 98, '2023-01-08'],
 ['ATL', 110, 112, 'LAC', -130, 108, '2023-01-08'],
 ['NO', 108, 132, 'WAS', -126, 112, '2023-01-09'],
 ['CHI', 310, 99, 'BOS', -390, 107, '2023-01-09'],
 ['MIL', -108, 111, 'NY', -108, 107, '2023-01-09'],
 ['SA', 420, 113, 'MEM', -560, 121, '2023-01-09'],
 ['LAL', 530, 109, 'DEN', -750, 122, '2023-01-09'],
 ['ORL', 198, 111, 'SAC', -240, 136, '2023-01-09'],
 ['DET', 810, 116, 'PHI', -1350, 147, '2023-01-10'],
 ['OKC', 102, 111, 'MIA', -120, 112, '2023-01-10'],
 ['CHA', 245, 120, 'TOR', -300, 132, '2023-01-10'],
 ['CLE', -142, 114, 'UTA', 120, 116, '2023-01-10'],
 ['ORL', 280, 109, 'POR', -350, 106, '2023-01-10'],
 ['PHO', 560, 125, 'GS', -800, 113, '2023-01-10'],
 ['DAL', -104, 101, 'LAC', -112, 113, '2023-01-10'],
 ['CHI', -126, 97, 'WAS', 108, 100, '2023-01-11'],
 ['MIN', -250, 118, 'DET', 205, 135, '2023-01-11'],
 ['IND', 164, 113, 'NY', -196, 119, '2023-01-11'],
 ['MIL', -190, 114, 'ATL', 160, 105, '2023-01-11'],
 ['NO', 330, 114, 'BOS', -420, 125, '2023-01-11'],
 ['SA', 590, 129, 'MEM', -850, 135, '2023-01-11'],
 ['PHO', 750, 97, 'DEN', -1200, 126, '2023-01-11'],
 ['HOU', 300, 115, 'SAC', -375, 135, '2023-01-11'],
 ['OKC', 370, 133, 'PHI', -480, 114, '2023-01-12'],
 ['CHA', 240, 114, 'TOR', -300, 124, '2023-01-12'],
 ['MIL', 190, 102, 'MIA', -230, 108, '2023-01-12'],
 ['BOS', -116, 109, 'BKN', -102, 98, '2023-01-12'],
 ['DAL', -142, 119, 'LAL', 120, 115, '2023-01-12'],
 ['CLE', -112, 119, 'POR', -104, 113, '2023-01-12'],
 ['ATL', -164, 113, 'IND', 138, 111, '2023-01-13'],
 ['NY', -164, 112, 'WAS', 138, 108, '2023-01-13'],
 ['NO', -225, 116, 'DET', 188, 110, '2023-01-13'],
 ['GS', -370, 144, 'SA', 295, 113, '2023-01-13'],
 ['PHO', 198, 116, 'MIN', -240, 121, '2023-01-13'],
 ['OKC', 152, 124, 'CHI', -180, 110, '2023-01-13'],
 ['ORL', 176, 108, 'UTA', -210, 112, '2023-01-13'],
 ['DEN', 164, 115, 'LAC', -196, 103, '2023-01-13'],
 ['HOU', 340, 114, 'SAC', -430, 139, '2023-01-13'],
 ['MIL', 148, 95, 'MIA', -176, 111, '2023-01-14'],
 ['MEM', -300, 130, 'IND', 245, 112, '2023-01-14'],
 ['BOS', -310, 122, 'CHA', 250, 106, '2023-01-14'],
 ['ATL', 235, 114, 'TOR', -290, 103, '2023-01-14'],
 ['CLE', -190, 102, 'MIN', 160, 110, '2023-01-14'],
 ['PHI', -270, 118, 'UTA', 220, 117, '2023-01-14'],
 ['DAL', 154, 119, 'POR', -184, 136, '2023-01-14'],
 ['NY', -350, 117, 'DET', 280, 104, '2023-01-15'],
 ['HOU', 350, 100, 'LAC', -450, 121, '2023-01-15'],
 ['GS', -230, 118, 'CHI', 190, 132, '2023-01-15'],
 ['OKC', 156, 112, 'BKN', -186, 102, '2023-01-15'],
 ['SAC', -270, 132, 'SA', 220, 119, '2023-01-15'],
 ['ORL', 420, 116, 'DEN', -560, 119, '2023-01-15'],
 ['DAL', 310, 123, 'POR', -390, 140, '2023-01-15'],
 ['PHI', -235, 113, 'LAL', 194, 112, '2023-01-15'],
 ['BOS', -360, 130, 'CHA', 290, 118, '2023-01-16'],
 ['IND', 162, 119, 'MIL', -190, 132, '2023-01-16'],
 ['NO', 235, 103, 'CLE', -290, 113, '2023-01-16'],
 ['TOR', 106, 123, 'NY', -124, 121, '2023-01-16'],
 ['GS', -144, 127, 'WAS', 122, 118, '2023-01-16'],
 ['MIA', -102, 113, 'ATL', -116, 121, '2023-01-16'],
 ['UTA', 154, 126, 'MIN', -184, 125, '2023-01-16'],
 ['PHO', 520, 106, 'MEM', -720, 136, '2023-01-16'],
 ['HOU', 240, 132, 'LAL', -295, 140, '2023-01-16'],
 ['TOR', 0, 122, 'MIL', -118, 130, '2023-01-17'],
 ['BKN', -138, 98, 'SA', 118, 106, '2023-01-17'],
 ['POR', 194, 113, 'DEN', -235, 122, '2023-01-17'],
 ['PHI', 0, 120, 'LAC', -118, 110, '2023-01-17'],
 ['ATL', 124, 130, 'DAL', -146, 122, '2023-01-18'],
 ['WAS', 176, 116, 'NY', -210, 105, '2023-01-18'],
 ['CLE', 240, 114, 'MEM', -295, 115, '2023-01-18'],
 ['CHA', -152, 122, 'HOU', 128, 117, '2023-01-18'],
 ['MIA', -166, 124, 'NO', 140, 98, '2023-01-18'],
 ['IND', 152, 106, 'OKC', -180, 126, '2023-01-18'],
 ['LAC', 265, 103, 'UTA', -330, 126, '2023-01-18'],
 ['MIN', 315, 118, 'DEN', -400, 122, '2023-01-18'],
 ['SAC', 114, 116, 'LAL', -134, 111, '2023-01-18'],
 ['CHI', -290, 126, 'DET', 235, 108, '2023-01-19'],
 ['GS', 230, 118, 'BOS', -280, 121, '2023-01-19'],
 ['TOR', -180, 126, 'MIN', 152, 128, '2023-01-19'],
 ['BKN', -168, 112, 'PHO', 142, 117, '2023-01-19'],
 ['PHI', -126, 105, 'POR', 108, 95, '2023-01-19'],
 ['NO', -112, 110, 'ORL', -104, 123, '2023-01-20'],
 ['GS', 360, 120, 'CLE', -460, 114, '2023-01-20'],
 ['NY', 130, 124, 'ATL', -154, 139, '2023-01-20'],
 ['MIA', -126, 90, 'DAL', 108, 115, '2023-01-20'],
 ['LAC', -300, 131, 'SA', 245, 126, '2023-01-20'],
 ['IND', 194, 111, 'DEN', -235, 134, '2023-01-20'],
 ['BKN', 156, 117, 'UTA', -186, 106, '2023-01-20'],
 ['MEM', -275, 121, 'LAL', 225, 122, '2023-01-20'],
 ['OKC', 164, 113, 'SAC', -196, 118, '2023-01-20']]
    #print(list_of_dates)
    for day_in in list_of_dates:
        url = 'https://www.scoresandodds.com/nba?date='+day_in
        reponse = requests.get(url)
        soup = BeautifulSoup(reponse.text)
        all_games = soup.find_all('table', {'class': 'event-card-table'})
        for game in all_games:

            #populate the home team and away team lists, change to class database population in pycharm
            #this needs work

            team_away = (game.find_all('span', {'class': 'team-emblem'})[0].get_text().strip())
            team_home = (game.find_all('span', {'class': 'team-emblem'})[1].get_text().strip())

            #populate MLs
            if game.find_all('td', {'data-field': 'live-moneyline'})[0].get_text().strip() == 'even':
                ml_away = (0)
            else:
                ml_away = (int(game.find_all('td', {'data-field': 'live-moneyline'})[0].get_text().strip()))
            if game.find_all('td', {'data-field': 'live-moneyline'})[1].get_text().strip() == 'even':
                ml_home = (0)
            else:
                ml_home = (int(game.find_all('td', {'data-field': 'live-moneyline'})[1].get_text().strip()))

            #populate final score
            away_score = (int(game.find_all('td', {'class': re.compile('event-card-score*')})[0].get_text().strip()))
            home_score = (int(game.find_all('td', {'class': re.compile('event-card-score*')})[1].get_text().strip()))
            final_game_list.append([team_away,ml_away,away_score,team_home,ml_home,home_score,day_in])
            #print(final_game_list)
    return(final_game_list)
def get_line_today():
    import requests
    from bs4 import BeautifulSoup
    url = 'https://www.scoresandodds.com/nba'
    reponse = requests.get(url)
    soup = BeautifulSoup(reponse.text)
    all_games = soup.find_all('table', {'class': 'event-card-table'})
    out_list = list()
    for i in all_games:
        away = i.find_all('span', {'class': 'team-emblem'})[0].get_text().strip()
        home = i.find_all('span', {'class': 'team-emblem'})[1].get_text().strip()
        away_line = i.find_all('span', {'class': 'data-odds'})[0].get_text()
        home_line = i.find_all('span', {'class': 'data-odds'})[1].get_text()
        if away_line == 'even':
            away_line = 0
        if home_line == 'even':
            home_line = 0
        away_line = int(away_line)
        home_line = int(home_line)
        out_list.append(([away, away_line, home, home_line]))
        # print([away, away_line, home, home_line])
    return (out_list)

def get_bet_rank():
    ##Used to reformat input historical score data
    team_results = []
    past_games = PastGames.objects.all()

    for i in PastGames.objects.all():
        team_results.append([i.home_team, i.home_score, i.away_score, i.home_money_line, i.game_date])
        team_results.append([i.away_team, i.away_score, i.home_score, i.away_money_line, i.game_date])

    def take_date(x):
        return x[4]

    team_results.sort(key=take_date, reverse=True)

    ##Calculates games won out of last_x number of games played
    last_x = 10
    win_percentage = {}
    for game in team_results:
        if game[1] > game[2]:  # won game
            if game[0] in win_percentage:  # in dictionary
                if win_percentage[game[0]][1] < last_x:  # less than x games analyzed
                    win_percentage[game[0]][0] += 1
                    win_percentage[game[0]][1] += 1
                else:  # x games analyzed
                    continue
                    #win_percentage[game[0]][0] += 1
            else:  # not in dictionary
                win_percentage[game[0]] = [1, 1]
        else:  # lost game
            if game[0] in win_percentage:  # in dictionary
                if win_percentage[game[0]][1] < last_x:  # less than x games analyzed
                    win_percentage[game[0]][1] += 1
                else:  # x games analyzed
                    continue
                    #win_percentage[game[0]][0] -= 1
            else:  # not in dictionary
                win_percentage[game[0]] = [0, 1]

    ##Used to reformat line data slightly
    all_lines = {}

    for game in TodayLines.objects.all():
        all_lines[game.home_team] = game.home_money_line
        all_lines[game.away_team] = game.away_money_line

    ##Combining winning percentage and today's lines to calculate today's expected return
    algo = {}
    bet_size = 100

    for i in all_lines:
        if i in win_percentage:
            if all_lines[i] > 0:
                algo[i] = (((bet_size * (all_lines[i] / 100)) * (win_percentage[i][0] / win_percentage[i][1]))
                           + (-bet_size * (1 - (win_percentage[i][0] / win_percentage[i][1]))))
            elif all_lines[i] < 0:
                algo[i] = (((bet_size * (100 / abs(all_lines[i]))) * (win_percentage[i][0] / win_percentage[i][1]))
                           + (-bet_size * (1 - (win_percentage[i][0] / win_percentage[i][1]))))
            else:
                algo[i] = 0
    algo = {k: v for k, v in sorted(algo.items(), key=lambda item: item[1], reverse=True)}

    ##Calculating total winnings ($) for past xx games based on bet size $xx
    winnings = {}
    for game in team_results:
        if game[3] == 0:  # moneyline == 0
            if game[0] in winnings:
                if len(winnings[game[0]]) < last_x:
                    winnings[game[0]].append(0)
            else:
                winnings[game[0]] = [0]
        else:  # moneyline != 0
            if game[1] > game[2]:  # won game
                if game[3] > 0:  # underdog
                    if game[0] in winnings:  # in dictionary
                        if len(winnings[game[0]]) < last_x:
                            winnings[game[0]].append((bet_size * (game[3] / 100)))
                    else:  # not in dictionary
                        winnings[game[0]] = [(bet_size * (game[3] / 100))]
                else:  # favorite
                    if game[0] in winnings:  # in dictionary
                        if len(winnings[game[0]]) < last_x:  # x games analyzed
                            winnings[game[0]].append((bet_size * (100 / abs(game[3]))))
                    else:  # not in dictionary
                        winnings[game[0]] = [(bet_size * (100 / abs(game[3])))]
            else:  # lost game
                if game[0] in winnings:  # in dictionary
                    if len(winnings[game[0]]) > last_x:  # x games analyzed
                        winnings[game[0]].append(-bet_size)
                else:  # not in dictionary
                    winnings[game[0]] = [-bet_size]


    ##Combines ranked dictionary of all outputs with team as key

    ranked_bets = {i: [all_lines[i], float((win_percentage[i][0] / win_percentage[i][1]) * 100),
                       round(sum(winnings[i]), 2), round(algo[i], 2)] for i in algo}

    return(ranked_bets)

def add_bet_rank(ranked_bets):
    for i in ranked_bets:
        ranked_team = i
        ranked_line = ranked_bets[i][0]
        ranked_win_percentage = ranked_bets[i][1]
        ranked_winnings = ranked_bets[i][2]
        ranked_payout = ranked_bets[i][3]
        try:
            s = Bets.objects.get(team=ranked_team, line=ranked_line, percent=ranked_win_percentage,
                                 winnings=ranked_winnings, payout=ranked_payout)
        except:
            s = Bets(team=ranked_team, line=ranked_line, percent=ranked_win_percentage,
                     winnings=ranked_winnings, payout=ranked_payout)
            s.save()